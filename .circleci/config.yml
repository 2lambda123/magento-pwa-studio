version: 2
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - master-coverage:
          requires:
            - build
          filters:
            branches:
              only: master
jobs:
  master-coverage:
    docker:
      - image: circleci/node:8.11.2
    steps:
      - run:
          name: 'Coveralls'
          command: 'npm test && npm run coveralls'

  build:
    docker:
      - image: circleci/node:8.11.2

    steps:
      - checkout

      - restore_cache:
          keys:
          # Partial match to always find the latest npm tarball cache
          - v1-npm-cache-{{ .Branch }}
          - v1-npm-cache-

      # Install root devDependencies and bootstrap packages. We use
      # --ignore-scripts to prevent building any artifacts to disk prior
      # to running Jest. This is a safeguard to ensure our tests always operate
      # on the latest source
      - run:
          name: Install shared devDependencies
          command: 'npm install --ignore-scripts'

      - run:
          name: Lerna Bootstrap
          command: 'npm run bootstrap'

      # Cache a bunch of stuff
      # - npm's local tarball cache
      # - node_modules for each package (npm is fast at restoring from a partially-outdated tree)
      - save_cache:
          paths:
            - ~/.npm
            - /root/.npm
            - node_modules
            - packages/peregrine/node_modules
            - packages/pwa-buildpack/node_modules
            - venia-concept/node_modules
          key: v1-npm-cache-{{ .Branch }}

      - run:
          name: DangerCI
          command: 'npm run danger'
